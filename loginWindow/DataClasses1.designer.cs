#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DB_APP_STORE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FINALPROJECT")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertITEM(ITEM instance);
    partial void UpdateITEM(ITEM instance);
    partial void DeleteITEM(ITEM instance);
    partial void InsertSALES_ORDER(SALES_ORDER instance);
    partial void UpdateSALES_ORDER(SALES_ORDER instance);
    partial void DeleteSALES_ORDER(SALES_ORDER instance);
    partial void InsertSALES_ORDER_DETAIL(SALES_ORDER_DETAIL instance);
    partial void UpdateSALES_ORDER_DETAIL(SALES_ORDER_DETAIL instance);
    partial void DeleteSALES_ORDER_DETAIL(SALES_ORDER_DETAIL instance);
    partial void InsertPERSON(PERSON instance);
    partial void UpdatePERSON(PERSON instance);
    partial void DeletePERSON(PERSON instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DB_APP_STORE.Properties.Settings.Default.FINALPROJECTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ITEM> ITEMs
		{
			get
			{
				return this.GetTable<ITEM>();
			}
		}
		
		public System.Data.Linq.Table<SALES_ORDER> SALES_ORDERs
		{
			get
			{
				return this.GetTable<SALES_ORDER>();
			}
		}
		
		public System.Data.Linq.Table<SALES_ORDER_DETAIL> SALES_ORDER_DETAILs
		{
			get
			{
				return this.GetTable<SALES_ORDER_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<PERSON> PERSONs
		{
			get
			{
				return this.GetTable<PERSON>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_addASalesOrderItem")]
		public int usp_addASalesOrderItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> salesOrderID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> upc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qty)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), salesOrderID, upc, qty);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ITEM")]
	public partial class ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _upc;
		
		private string _itemName;
		
		private int _itemTypeID;
		
		private decimal _unitPrice;
		
		private int _qtyInInventory;
		
		private int _reorderLevel;
		
		private int _vendorID;
		
		private EntitySet<SALES_ORDER_DETAIL> _SALES_ORDER_DETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnupcChanging(long value);
    partial void OnupcChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OnitemTypeIDChanging(int value);
    partial void OnitemTypeIDChanged();
    partial void OnunitPriceChanging(decimal value);
    partial void OnunitPriceChanged();
    partial void OnqtyInInventoryChanging(int value);
    partial void OnqtyInInventoryChanged();
    partial void OnreorderLevelChanging(int value);
    partial void OnreorderLevelChanged();
    partial void OnvendorIDChanging(int value);
    partial void OnvendorIDChanged();
    #endregion
		
		public ITEM()
		{
			this._SALES_ORDER_DETAILs = new EntitySet<SALES_ORDER_DETAIL>(new Action<SALES_ORDER_DETAIL>(this.attach_SALES_ORDER_DETAILs), new Action<SALES_ORDER_DETAIL>(this.detach_SALES_ORDER_DETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upc", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long upc
		{
			get
			{
				return this._upc;
			}
			set
			{
				if ((this._upc != value))
				{
					this.OnupcChanging(value);
					this.SendPropertyChanging();
					this._upc = value;
					this.SendPropertyChanged("upc");
					this.OnupcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this.OnitemNameChanging(value);
					this.SendPropertyChanging();
					this._itemName = value;
					this.SendPropertyChanged("itemName");
					this.OnitemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemTypeID", DbType="Int NOT NULL")]
		public int itemTypeID
		{
			get
			{
				return this._itemTypeID;
			}
			set
			{
				if ((this._itemTypeID != value))
				{
					this.OnitemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._itemTypeID = value;
					this.SendPropertyChanged("itemTypeID");
					this.OnitemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Decimal(5,2) NOT NULL")]
		public decimal unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtyInInventory", DbType="Int NOT NULL")]
		public int qtyInInventory
		{
			get
			{
				return this._qtyInInventory;
			}
			set
			{
				if ((this._qtyInInventory != value))
				{
					this.OnqtyInInventoryChanging(value);
					this.SendPropertyChanging();
					this._qtyInInventory = value;
					this.SendPropertyChanged("qtyInInventory");
					this.OnqtyInInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reorderLevel", DbType="Int NOT NULL")]
		public int reorderLevel
		{
			get
			{
				return this._reorderLevel;
			}
			set
			{
				if ((this._reorderLevel != value))
				{
					this.OnreorderLevelChanging(value);
					this.SendPropertyChanging();
					this._reorderLevel = value;
					this.SendPropertyChanged("reorderLevel");
					this.OnreorderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vendorID", DbType="Int NOT NULL")]
		public int vendorID
		{
			get
			{
				return this._vendorID;
			}
			set
			{
				if ((this._vendorID != value))
				{
					this.OnvendorIDChanging(value);
					this.SendPropertyChanging();
					this._vendorID = value;
					this.SendPropertyChanged("vendorID");
					this.OnvendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_SALES_ORDER_DETAIL", Storage="_SALES_ORDER_DETAILs", ThisKey="upc", OtherKey="upc")]
		public EntitySet<SALES_ORDER_DETAIL> SALES_ORDER_DETAILs
		{
			get
			{
				return this._SALES_ORDER_DETAILs;
			}
			set
			{
				this._SALES_ORDER_DETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SALES_ORDER_DETAILs(SALES_ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = this;
		}
		
		private void detach_SALES_ORDER_DETAILs(SALES_ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SALES_ORDER")]
	public partial class SALES_ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _salesOrderID;
		
		private System.DateTime _dateOfSale;
		
		private int _cashierId;
		
		private System.Nullable<decimal> _totalSale;
		
		private System.Nullable<int> _custId;
		
		private decimal _minPurchaseForDiscount;
		
		private EntitySet<SALES_ORDER_DETAIL> _SALES_ORDER_DETAILs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsalesOrderIDChanging(int value);
    partial void OnsalesOrderIDChanged();
    partial void OndateOfSaleChanging(System.DateTime value);
    partial void OndateOfSaleChanged();
    partial void OncashierIdChanging(int value);
    partial void OncashierIdChanged();
    partial void OntotalSaleChanging(System.Nullable<decimal> value);
    partial void OntotalSaleChanged();
    partial void OncustIdChanging(System.Nullable<int> value);
    partial void OncustIdChanged();
    partial void OnminPurchaseForDiscountChanging(decimal value);
    partial void OnminPurchaseForDiscountChanged();
    #endregion
		
		public SALES_ORDER()
		{
			this._SALES_ORDER_DETAILs = new EntitySet<SALES_ORDER_DETAIL>(new Action<SALES_ORDER_DETAIL>(this.attach_SALES_ORDER_DETAILs), new Action<SALES_ORDER_DETAIL>(this.detach_SALES_ORDER_DETAILs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int salesOrderID
		{
			get
			{
				return this._salesOrderID;
			}
			set
			{
				if ((this._salesOrderID != value))
				{
					this.OnsalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._salesOrderID = value;
					this.SendPropertyChanged("salesOrderID");
					this.OnsalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOfSale", AutoSync=AutoSync.Always, DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime dateOfSale
		{
			get
			{
				return this._dateOfSale;
			}
			set
			{
				if ((this._dateOfSale != value))
				{
					this.OndateOfSaleChanging(value);
					this.SendPropertyChanging();
					this._dateOfSale = value;
					this.SendPropertyChanged("dateOfSale");
					this.OndateOfSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashierId", DbType="Int NOT NULL")]
		public int cashierId
		{
			get
			{
				return this._cashierId;
			}
			set
			{
				if ((this._cashierId != value))
				{
					this.OncashierIdChanging(value);
					this.SendPropertyChanging();
					this._cashierId = value;
					this.SendPropertyChanged("cashierId");
					this.OncashierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalSale", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> totalSale
		{
			get
			{
				return this._totalSale;
			}
			set
			{
				if ((this._totalSale != value))
				{
					this.OntotalSaleChanging(value);
					this.SendPropertyChanging();
					this._totalSale = value;
					this.SendPropertyChanged("totalSale");
					this.OntotalSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custId", DbType="Int")]
		public System.Nullable<int> custId
		{
			get
			{
				return this._custId;
			}
			set
			{
				if ((this._custId != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustIdChanging(value);
					this.SendPropertyChanging();
					this._custId = value;
					this.SendPropertyChanged("custId");
					this.OncustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minPurchaseForDiscount", DbType="Decimal(4,2) NOT NULL")]
		public decimal minPurchaseForDiscount
		{
			get
			{
				return this._minPurchaseForDiscount;
			}
			set
			{
				if ((this._minPurchaseForDiscount != value))
				{
					this.OnminPurchaseForDiscountChanging(value);
					this.SendPropertyChanging();
					this._minPurchaseForDiscount = value;
					this.SendPropertyChanged("minPurchaseForDiscount");
					this.OnminPurchaseForDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_ORDER_SALES_ORDER_DETAIL", Storage="_SALES_ORDER_DETAILs", ThisKey="salesOrderID", OtherKey="salesOrderID")]
		public EntitySet<SALES_ORDER_DETAIL> SALES_ORDER_DETAILs
		{
			get
			{
				return this._SALES_ORDER_DETAILs;
			}
			set
			{
				this._SALES_ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_SALES_ORDER", Storage="_CUSTOMER", ThisKey="custId", OtherKey="custID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.SALES_ORDERs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.SALES_ORDERs.Add(this);
						this._custId = value.custID;
					}
					else
					{
						this._custId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SALES_ORDER_DETAILs(SALES_ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.SALES_ORDER = this;
		}
		
		private void detach_SALES_ORDER_DETAILs(SALES_ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.SALES_ORDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SALES_ORDER_DETAIL")]
	public partial class SALES_ORDER_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _salesOrderID;
		
		private long _upc;
		
		private int _qtySold;
		
		private decimal _unitPrice;
		
		private char _onSale;
		
		private EntityRef<ITEM> _ITEM;
		
		private EntityRef<SALES_ORDER> _SALES_ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsalesOrderIDChanging(int value);
    partial void OnsalesOrderIDChanged();
    partial void OnupcChanging(long value);
    partial void OnupcChanged();
    partial void OnqtySoldChanging(int value);
    partial void OnqtySoldChanged();
    partial void OnunitPriceChanging(decimal value);
    partial void OnunitPriceChanged();
    partial void OnonSaleChanging(char value);
    partial void OnonSaleChanged();
    #endregion
		
		public SALES_ORDER_DETAIL()
		{
			this._ITEM = default(EntityRef<ITEM>);
			this._SALES_ORDER = default(EntityRef<SALES_ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int salesOrderID
		{
			get
			{
				return this._salesOrderID;
			}
			set
			{
				if ((this._salesOrderID != value))
				{
					if (this._SALES_ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._salesOrderID = value;
					this.SendPropertyChanged("salesOrderID");
					this.OnsalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upc", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long upc
		{
			get
			{
				return this._upc;
			}
			set
			{
				if ((this._upc != value))
				{
					if (this._ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnupcChanging(value);
					this.SendPropertyChanging();
					this._upc = value;
					this.SendPropertyChanged("upc");
					this.OnupcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtySold", DbType="Int NOT NULL")]
		public int qtySold
		{
			get
			{
				return this._qtySold;
			}
			set
			{
				if ((this._qtySold != value))
				{
					this.OnqtySoldChanging(value);
					this.SendPropertyChanging();
					this._qtySold = value;
					this.SendPropertyChanged("qtySold");
					this.OnqtySoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Decimal(5,2) NOT NULL")]
		public decimal unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onSale", DbType="Char(1) NOT NULL")]
		public char onSale
		{
			get
			{
				return this._onSale;
			}
			set
			{
				if ((this._onSale != value))
				{
					this.OnonSaleChanging(value);
					this.SendPropertyChanging();
					this._onSale = value;
					this.SendPropertyChanged("onSale");
					this.OnonSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_SALES_ORDER_DETAIL", Storage="_ITEM", ThisKey="upc", OtherKey="upc", IsForeignKey=true)]
		public ITEM ITEM
		{
			get
			{
				return this._ITEM.Entity;
			}
			set
			{
				ITEM previousValue = this._ITEM.Entity;
				if (((previousValue != value) 
							|| (this._ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITEM.Entity = null;
						previousValue.SALES_ORDER_DETAILs.Remove(this);
					}
					this._ITEM.Entity = value;
					if ((value != null))
					{
						value.SALES_ORDER_DETAILs.Add(this);
						this._upc = value.upc;
					}
					else
					{
						this._upc = default(long);
					}
					this.SendPropertyChanged("ITEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALES_ORDER_SALES_ORDER_DETAIL", Storage="_SALES_ORDER", ThisKey="salesOrderID", OtherKey="salesOrderID", IsForeignKey=true)]
		public SALES_ORDER SALES_ORDER
		{
			get
			{
				return this._SALES_ORDER.Entity;
			}
			set
			{
				SALES_ORDER previousValue = this._SALES_ORDER.Entity;
				if (((previousValue != value) 
							|| (this._SALES_ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALES_ORDER.Entity = null;
						previousValue.SALES_ORDER_DETAILs.Remove(this);
					}
					this._SALES_ORDER.Entity = value;
					if ((value != null))
					{
						value.SALES_ORDER_DETAILs.Add(this);
						this._salesOrderID = value.salesOrderID;
					}
					else
					{
						this._salesOrderID = default(int);
					}
					this.SendPropertyChanged("SALES_ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSON")]
	public partial class PERSON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _personID;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _phoneNumber;
		
		private string _street;
		
		private string _zipCode;
		
		private string _stateInitial;
		
		private string _city;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpersonIDChanging(int value);
    partial void OnpersonIDChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OnzipCodeChanging(string value);
    partial void OnzipCodeChanged();
    partial void OnstateInitialChanging(string value);
    partial void OnstateInitialChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public PERSON()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int personID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if ((this._personID != value))
				{
					this.OnpersonIDChanging(value);
					this.SendPropertyChanging();
					this._personID = value;
					this.SendPropertyChanged("personID");
					this.OnpersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zipCode", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string zipCode
		{
			get
			{
				return this._zipCode;
			}
			set
			{
				if ((this._zipCode != value))
				{
					this.OnzipCodeChanging(value);
					this.SendPropertyChanging();
					this._zipCode = value;
					this.SendPropertyChanged("zipCode");
					this.OnzipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateInitial", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string stateInitial
		{
			get
			{
				return this._stateInitial;
			}
			set
			{
				if ((this._stateInitial != value))
				{
					this.OnstateInitialChanging(value);
					this.SendPropertyChanging();
					this._stateInitial = value;
					this.SendPropertyChanged("stateInitial");
					this.OnstateInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSON_CUSTOMER", Storage="_CUSTOMER", ThisKey="personID", OtherKey="custID", IsUnique=true, IsForeignKey=false)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.PERSON = null;
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.PERSON = this;
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _custID;
		
		private string _username;
		
		private string _password;
		
		private decimal _balance;
		
		private EntitySet<SALES_ORDER> _SALES_ORDERs;
		
		private EntityRef<PERSON> _PERSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustIDChanging(int value);
    partial void OncustIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnbalanceChanging(decimal value);
    partial void OnbalanceChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._SALES_ORDERs = new EntitySet<SALES_ORDER>(new Action<SALES_ORDER>(this.attach_SALES_ORDERs), new Action<SALES_ORDER>(this.detach_SALES_ORDERs));
			this._PERSON = default(EntityRef<PERSON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int custID
		{
			get
			{
				return this._custID;
			}
			set
			{
				if ((this._custID != value))
				{
					if (this._PERSON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustIDChanging(value);
					this.SendPropertyChanging();
					this._custID = value;
					this.SendPropertyChanged("custID");
					this.OncustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(15)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(40)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(6,2) NOT NULL")]
		public decimal balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_SALES_ORDER", Storage="_SALES_ORDERs", ThisKey="custID", OtherKey="custId")]
		public EntitySet<SALES_ORDER> SALES_ORDERs
		{
			get
			{
				return this._SALES_ORDERs;
			}
			set
			{
				this._SALES_ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSON_CUSTOMER", Storage="_PERSON", ThisKey="custID", OtherKey="personID", IsForeignKey=true)]
		public PERSON PERSON
		{
			get
			{
				return this._PERSON.Entity;
			}
			set
			{
				PERSON previousValue = this._PERSON.Entity;
				if (((previousValue != value) 
							|| (this._PERSON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSON.Entity = null;
						previousValue.CUSTOMER = null;
					}
					this._PERSON.Entity = value;
					if ((value != null))
					{
						value.CUSTOMER = this;
						this._custID = value.personID;
					}
					else
					{
						this._custID = default(int);
					}
					this.SendPropertyChanged("PERSON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SALES_ORDERs(SALES_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_SALES_ORDERs(SALES_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
}
#pragma warning restore 1591
